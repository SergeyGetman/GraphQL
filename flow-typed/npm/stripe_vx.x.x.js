// flow-typed signature: 86608eeb8169faac3cbe3bcc3dc5441d
// flow-typed version: <<STUB>>/stripe_v8.29.0/flow_v0.119.1

/**
 * This is an autogenerated libdef stub for:
 *
 *   'stripe'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module 'stripe' {
  declare export type LatestApiVersion = '2022-08-01';

  declare type StripeConfig = {
    /**
     * This library's types only reflect the latest API version.
     *
     * We recommend upgrading your account's API Version to the latest version
     * if you wish to use TypeScript with this library.
     *
     * If you wish to remain on your account's default API version,
     * you may pass `null` or another version instead of the latest version,
     * and add a `@ts-ignore` comment here and anywhere the types differ between API versions.
     *
     * @docs https://stripe.com/docs/api/versioning
     */
    apiVersion: LatestApiVersion;

    /**
     * Optionally indicate that you are using TypeScript.
     * This currently has no runtime effect other than adding "TypeScript" to your user-agent.
     */
    typescript?: true;

    /**
     * Enables automatic network retries with exponential backoff, up to the specified number of retries (default 0).
     * Idempotency keys](https://stripe.com/docs/api/idempotent_requests) are added where appropriate to prevent duplication.
     * @docs https://github.com/stripe/stripe-node#network-retries
     */
    maxNetworkRetries?: number;

    /**
     * Request timeout in milliseconds.
     * The default is 80000
     */
    timeout?: number;

    /**
     * Specify the host to use for API Requests.
     */
    host?: string;

    /**
     * Specify the port to use for API Requests.
     */
    port?: string | number;

    /**
     * Pass `telemetry: false` to disable headers that provide Stripe
     * with data about usage of the API.
     * Currently, the only telemetry we send is latency metrics.
     */
    telemetry?: boolean;

    /**
     * An account id on whose behalf you wish to make every request.
     */
    stripeAccount?: string;
  }
  declare export class Stripe {
    constructor(key: string, options: StripeConfig): Stripe;
    prices: $FlowFixMe;
    products: $FlowFixMe;
    webhooks: $FlowFixMe;
    customers: $FlowFixMe;
    subscriptions: $FlowFixMe;
  }

  declare export default Stripe & (key: string) => Stripe;
}
